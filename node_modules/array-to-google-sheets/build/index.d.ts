import "./types";
import GoogleSpreadsheet, { SpreadsheetWorksheet } from "google-spreadsheet";
export declare type IOption = {
    minRow: number;
    minCol: number;
    margin: number;
    resize: boolean;
    clear: boolean;
};
declare type IFormulaCell = {
    row: number | "this";
    col: number | "this";
};
export declare class ArrayToGoogleSheets {
    readonly docKey: string;
    readonly creds: any;
    doc: GoogleSpreadsheet;
    credsJson: object;
    constructor(docKey: string, creds: any);
    convertColToAlphabet(num: number): string;
    convertWid2gid(wid: string): number;
    importJson(file: string): any;
    getUrlObject(wid: string): {
        url: string;
        gid: number;
    };
    formatFormula(formulaFormat: string, cells: IFormulaCell[], currentRow: number, currentCol: number): string;
    updateGoogleSheetsData(sheet: SpreadsheetWorksheet, values: any[][], options: IOption): Promise<void>;
    updateGoogleSheets(sheetName: string, values: any[], partialOption?: Partial<IOption>): Promise<{
        url: string;
        gid: number;
    }>;
    getGoogleSheet(sheetName: string): Promise<any[] | undefined>;
    getGoogleSheetAsCsv(sheetName: string): Promise<string | undefined>;
    getGoogleSheets(sheetNames?: string[]): Promise<{
        [key: string]: any[];
    }>;
    getGoogleSheetsAsCsv(sheetNames?: string[]): Promise<{
        [key: string]: string;
    }>;
    private _getDocInfo;
    private _addWorkSheet;
    private _resizeSheet;
    private _getCells;
    private _updateCells;
}
export {};
